AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates VPC IG Subnet for stelligent-u'
Metadata:
  SupportedResources: 'EC2'
Parameters:
  VpcName:
    Description: 'The name of the VPC being created.'
    Type: String
    Default: 'vpc-ajay'
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16
  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24
  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.30.0/24

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: false
      EnableDnsHostnames: false
      Tags:
      - Key: Name
        Value: !Ref VpcName
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'user'
          Value: 'ajay.anbuselvam.labs'
        - Key: 'stelligent-u-lesson'
          Value: '4.1'
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref myInternetGateway
      VpcId: !Ref myVPC

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: Name
        Value: 'ajay-public-route-table'
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId:
        !Ref PublicSubnet1
      Tags:
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'

  EIP:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: 'user'
        Value: 'ajay.anbuselvam.labs'
      - Key: 'stelligent-u-lesson'
        Value: '4.1'
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT

  MyNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: !Ref myVPC

  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: MyNACL
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 24.96.141.2/32
       PortRange:
         From: 22
         To: 22
  InboundRule2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: MyNACL
       RuleNumber: 200
       Protocol: 6
       RuleAction: allow
       CidrBlock: 10.192.30.0/24
       PortRange:
         From: 1024
         To: 65535
  InboundRule3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
         Ref: MyNACL
      RuleNumber: 300
      Protocol: 1
      Icmp:
        Type: -1
        Code: -1
      RuleAction: allow
      CidrBlock: 10.192.30.0/24
  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: MyNACL
       RuleNumber: 100
       Protocol: 6
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
       PortRange:
         From: 0
         To: 65535
  OutboundRule2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: MyNACL
       RuleNumber: 200
       Protocol: 1
       Icmp:
        Type: -1
        Code: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
  
  PublicSubnetNACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref MyNACL
      SubnetId: !Ref PublicSubnet1

  PrivateNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: !Ref myVPC

  PrivateInboundRule1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: PrivateNACL
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 10.192.20.0/24
       PortRange:
         From: 22
         To: 22
  PrivateInboundRule2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: PrivateNACL
       RuleNumber: 200
       Protocol: 1
       Icmp:
        Type: -1
        Code: -1
       RuleAction: allow
       CidrBlock: 10.192.20.0/24
  PrivateInboundRule3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: PrivateNACL
       RuleNumber: 300
       Protocol: 6
       RuleAction: allow
       CidrBlock: 10.192.20.0/24
       PortRange:
         From: 80
         To: 80
    
  PrivateOutboundRule1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: PrivateNACL
       RuleNumber: 100
       Protocol: 6
       Egress: true
       RuleAction: allow
       CidrBlock: 10.192.20.0/24
       PortRange:
         From: 0
         To: 65535
  PrivateOutboundRule2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: PrivateNACL
       RuleNumber: 200
       Protocol: 1
       Icmp:
        Type: -1
        Code: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 10.192.20.0/24
  
  PrivateSubnetNACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref PrivateNACL
      SubnetId: !Ref PrivateSubnet1


Outputs:
  VpcId:
    Description: 'ID of VPC created in this stack'
    Value: !Ref myVPC
    Export:
      Name: 'ajay-vpc-id-2'
  SubnetId:
    Description: 'ID of public subnet created in this stack'
    Value: !Ref PublicSubnet1
    Export:
      Name: 'ajay-public-subnet-id-2'
  PrivateSubnetId:
    Description: 'ID of private subnet created in this stack'
    Value: !Ref PrivateSubnet1
    Export:
      Name: 'ajay-private-subnet-id-2'